buildscript {
    ext {
        onfEnv = hasProperty('confEnv') ? confEnv : 'master'
        springbootVer = '1.5.9.RELEASE'
        restEasyVer = '3.1.0.Final'
        dubboxVer = '2.8.4'
        xchangeVer = '4.3.2'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springbootVer")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

description = "coin automatic trader"
group = 'com.hyperknob'
version = '1.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    // maven库
    def cn = "http://maven.aliyun.com/nexus/content/groups/public/"
    def aboard = "http://central.maven.org/maven2/"
    // 先从url中下载jar若没有找到，则在artifactUrls中寻找
    mavenLocal()
    maven {
        url cn
        artifactUrls aboard
    }
}

bootRun {
    addResources = true
}

jar {
    baseName = 'coin-trader'
}

dependencies {
    compile 'log4j:log4j:1.2.17'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.logback-extensions:logback-ext-spring:0.1.4'
//    compile 'io.undertow:undertow-core:1.4.7.Final'
//    compile 'io.undertow:undertow-servlet:1.4.7.Final'
    compile 'org.apache.commons:commons-lang3:3.7'
//    compile 'org.apache.tomcat.embed:tomcat-embed-core:8.5.9'
    compile "org.springframework.boot:spring-boot:$springbootVer"
    compile "org.springframework.boot:spring-boot-autoconfigure:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-web:$springbootVer" exclude module: 'spring-boot-starter-tomcat'
    compile "org.springframework.boot:spring-boot-starter-jdbc:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-undertow:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-validation:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-logging:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-aop:$springbootVer"
    compile "org.springframework.boot:spring-boot-starter-freemarker:$springbootVer"
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1"
    compile 'mysql:mysql-connector-java:5.1.45'
    compile "redis.clients:jedis:2.9.0"
    compile 'org.quartz-scheduler:quartz:2.2.3'
    compileOnly "org.projectlombok:lombok:1.16.16"
    compile 'com.alibaba:fastjson:1.2.38'
    compile 'com.alibaba:druid:1.1.6'
    testCompile "junit:junit:4.12"
    compile "org.knowm.xchange:xchange-core:$xchangeVer"
    compile "org.knowm.xchange:xchange-okcoin:$xchangeVer"
}

//task copyDeps(type: Copy) {
//    from configurations.compile
//    into 'build/libs'
//}
//
//task cleanConf(type: Delete) {
//    delete "$projectDir/build/resources/main/"
//}
//
//task copyConf(type: Copy) {
//    dependsOn cleanConf
//    from "$projectDir/src/main/resources/conf/$confEnv"
//    into "$projectDir/build/resources/main/conf"
//}
//
//task copyMeta(type: Copy) {
//    dependsOn copyConf
//    from "$projectDir/src/main/resources/META-INF"
//    into "$projectDir/build/resources/main/META-INF"
//}
//
//
//processResources {
//    doLast {
//        delete "$projectDir/build/resources/main/"
//        copy {
//            from "$projectDir/src/main/resources/conf/$confEnv"
//            into "$buildDir/resources/main/conf"
//        }
//        copy {
//            from "$projectDir/src/main/resources/META-INF"
//            into "$buildDir/resources/main/META-INF"
//        }
//        copy {
//            from "$projectDir/src/main/resources/test"
//            into "$buildDir/resources/main/test"
//        }
//    }
//}
